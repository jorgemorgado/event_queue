#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# A simple interpreter for the 'q' (pseudo) scripting language.
#
# Jorge Morgado <jorge (at) morgado (dot) ch>
# version 1.0
# (c)2014
#

import sys
import os
import code

def load_src(name, fpath):
    """ Add relative or absolute path directories to the module search path. """

    import os, imp

    p = fpath if os.path.isabs(fpath) \
        else os.path.join(os.path.dirname(__file__), fpath)

    return imp.load_source(name, p)

# From the real and absolute path of this file load the required source
realpath = os.path.dirname(os.path.realpath(__file__))
load_src("q", realpath + "/../lib/q/q.py")
from q import Q


# -----------------------------------------------------------------------------
# Main program
# -----------------------------------------------------------------------------

if len(sys.argv) == 1:
    print("Error: no q script provided.")
    # TODO Display usage information
    exit()

# Read the script name via argument
arg1 = sys.argv[1]

if not os.path.isfile(arg1):
    print("Error: q script no found under `%s'." % arg1)
    exit()

# TODO Verify that the file open succeeds
f = open(arg1, 'r')

script = ""
for line in f:
    script = script + line

f.close()

# Instantiate the queue object to be used in the script
q = Q()

co = code.compile_command(script, "<stdin>", "exec")

# We have a complete statement, execute it!
if co:
    exec(co)
